#Non-lethal Vore
safe_vore_effect = {
	if = {
		limit = {
			NOT = { exists = scope:predator }
		}
		scope:actor = {
			save_scope_as = predator
		}
	}
	if = {
		limit = {
			NOT = { exists = scope:prey }
		}
		scope:recipient = {
			save_scope_as = prey
		}
	}
	# Find and assign the lowest slot
    assign_lowest_slot_effect = yes
    
    # Check if we found a slot
    if = {
        limit = {
            scope:predator = { var:assigned_slot > 0 }
        }

		apply_slot_flags_effect = yes
		scope:predator = {
			add_trait = $type$_predator
			add_character_flag = $type$_predator
			add_character_flag = vore_predator
			set_relation_prey = scope:prey
			add_relation_flag = {
				flag = $type$
				target = scope:prey
				relation = prey
			}
			change_variable = { name = num_prey add = 1}
		}
		if = {
			limit = {
				scope:prey = {
					OR = {
						is_in_prison_type = dungeon
						is_in_prison_type = house_arrest
					}
				}
			}
			scope:prey = { change_prison_type = $prison_type$ }
		}
		else = {
			scope:predator = {
				imprison = {
					target = scope:prey
					type = $prison_type$
				}
			}
		}
		
		scope:prey = {
			set_relation_predator = scope:predator
			add_character_modifier = { modifier = $type$_vored }
			add_character_flag = vored
			add_trait = $type$_vored
			add_relation_flag = {
				flag = $type$
				target = scope:prey
				relation = prey
			}
		}
	}
	else = {
        # No slots available - handle this case
        scope:predator = {
            # Maybe send an event saying "stomach is full"
			#Maybe add a hidden option to the beginning of the events to indicate that the predator is full
            #trigger_event = vore_stomach_full.0001
        }
    }
}

#Lethal Vore
lethal_vore_effect = {
	scope:predator = {
		add_trait = digesting
		add_character_flag = vore_predator
		trigger_event = { id = vore.0002 months = { 2 3 } }
	}
	scope:prey = {
		remove_character_flag = vored
		remove_character_modifier = $type$_vored
		remove_trait = $type$_vored
		#remove_variable = vore_type 
			death = { 
					death_reason = death_execution_$type$
					killer = scope:predator
			}
			# add_character_modifier = {
			# 	modifier = digestion_in_progress
			# 	duration = { days = 7 }
			# }
	}
	hidden_effect = {
			scope:predator= {
					if = {	#Should be in lethal_vore_religion
							limit = { NOT = { scope:predator.religion = religion:safe_vore_religion } }
							show_as_tooltip = {
									sacrifice_prisoner_effect = {
											VICTIM = scope:prey
											EXECUTIONER = scope:predator
									}       
							}
					}
					else = {
							show_as_tooltip = {
									execute_prisoner_effect = {
											VICTIM = scope:prey
											EXECUTIONER = scope:predator
									}       
							}
					}
			}       
	}
}

#Check for all locations of vore for release
release_prey_location_check_effect = {
	switch = {
		trigger = has_trait
		oral_predator = {
			release_prey_effect = {
					type = oral
			}
		}
		anal_predator = {
			release_prey_effect = {
					type = anal
			}
		}
		unbirth_predator = {
			release_prey_effect = {
					type = unbirth
			}
		}
		cock_predator = {
			release_prey_effect = {
					type = cock
			}
		}
		fallback = {
			release_prey_effect = {
				#log = "Fallback to oral"
				type = oral
			}
		}
	}
	#Figure out how to use a variable with flags
	# if = {
	# 	limit = { has_variable = vore_type }
	# 	release_prey_effect = { type = scope:prey.var:flag:vore_type }
	# }
	# else = {
	# 	release_prey_effect = {
	# 		#log = "Fallback to oral"
	# 		type = oral
	# 	}
	# }
}

assign_lowest_slot_effect = {
    # Call this effect and it will set a variable with the slot number
    
    scope:predator = {
        # Check each slot in order
        if = {
            limit = {
                NOT = {
                    any_relation = {
                        type = prey
                        has_relation_flag = {
                            flag = one
                            target = prev
                            relation = predator
						}
                    }
                }
            }
            set_variable = { name = assigned_slot value = 1 }
        }
        else_if = {
            limit = {
                NOT = {
                    any_relation = {
                        type = prey
                        has_relation_flag = {
                            flag = two
                            target = prev
                            relation = predator
                        }
                    }
                }
            }
            set_variable = { name = assigned_slot value = 2 }
        }
        else_if = {
            limit = {
                NOT = {
                    any_relation = {
                        type = prey
                        has_relation_flag = {
                            flag = three
                            target = prev
                            relation = predator
                        }
                    }
                }
            }
            set_variable = { name = assigned_slot value = 3 }
        }
        else_if = {
            limit = {
                NOT = {
                    any_relation = {
                        type = prey
                        has_relation_flag = {
                            flag = four
                            target = prev
                            relation = predator
                        }
                    }
                }
            }
            set_variable = { name = assigned_slot value = 4 }
        }
        else_if = {
            limit = {
                NOT = {
                    any_relation = {
                        type = prey
                        has_relation_flag = {
                            flag = five
                            target = prev
                            relation = predator
                        }
                    }
                }
            }
            set_variable = { name = assigned_slot value = 5 }
        }
        else = {
            # No slots available
            set_variable = { name = assigned_slot value = 0 }
        }
    }
}

apply_slot_flags_effect = {
    # Use the assigned_slot variable to apply the right flags
    scope:predator = {
        switch = {
            trigger = var:assigned_slot
            1 = {
                add_relation_flag = {
                    flag = one
                    target = scope:prey
                    relation = prey
                }
                scope:prey = {
                    add_relation_flag = {
                        flag = one
                        target = scope:predator
                        relation = predator
                    }
                }
            }
            2 = {
                add_relation_flag = {
                    flag = two
                    target = scope:prey
                    relation = prey
                }
                scope:prey = {
                    add_relation_flag = {
                        flag = two
                        target = scope:predator
                        relation = predator
                    }
                }
            }
            3 = {
				add_relation_flag = {
					flag = three
					target = scope:predator
					relation = predator
				}
			}
			4 = {
				add_relation_flag = {
					flag = four
					target = scope:predator
					relation = predator
				}
			}
			5 = {
				add_relation_flag = {
					flag = five
					target = scope:predator	
					relation = predator
				}
			}
        }
    }
}

#Used to properly release prey
release_prey_effect = {
	if = {
		limit = {
			NOT = { exists = scope:predator }
		}
		scope:actor = {
			save_scope_as = predator
		}
	}
	if = {
		limit = {
			NOT = { exists = scope:prey }
		}
		scope:recipient = {
			save_scope_as = prey
		}
	}
	scope:predator = {
		 if = {
			limit = {
				has_relation_flag = {
					flag = $type$
					target = scope:prey
					relation = prey
				}
				NOT = {
					any_relation = {
						type = prey
						NOT = { this = scope:prey }
						has_relation_flag = {
							flag = $type$
							target = prev
							relation = predator
						}
					}
				}
			}
			remove_trait = $type$_predator
			remove_character_flag = $type$_predator
		}
		change_variable = {
			name = num_prey
			add = -1
		}
		if = {
			limit = {
				var:num_prey <= 0
			}
			remove_character_flag = vore_predator
		}
		add_character_modifier = {
			modifier = satisfied
			years = 1
		}
		remove_relation_flag = {
			flag = $type$
			target = scope:prey
			relation = prey
		}
		remove_relation_prey = scope:prey
	}
	scope:prey = {
		remove_character_flag = vored
		remove_character_modifier = $type$_vored
		remove_trait = $type$_vored
		IF = {
			limit = { has_character_flag = vored_from_dungeon }
			change_prison_type = dungeon
			remove_character_flag = vored_from_dungeon   
		}
		ELSE_IF= {
			limit = { has_character_flag = vored_from_house_arrest }
			change_prison_type = house_arrest
			remove_character_flag = vored_from_house_arrest
		}
		ELSE = {
			release_from_prison = yes
		}
		remove_relation_flag = {
			flag = $type$
            target = scope:predator
            relation = predator
        }
		clear_saved_scope = predator   
		clear_saved_scope = prey
	}
}


#Used when finishing digestion
finish_digesting_effect = {
	if = { 
		limit = { 
				has_trait_rank = { trait = predator rank < 1 }
		}         
		add_trait = predator_1
	}
	else_if = { 
		limit = {
				has_trait_rank = { trait = predator rank = 1 } 
		}
		change_trait_rank = { trait = predator rank = 2 }
	}
	else_if = { 
		limit = { 
				has_trait_rank = { trait = predator rank >= 2 } 
		}
		change_trait_rank = { trait = predator rank = 3 }
	}        
	
	if = {
		limit = { has_trait = digesting }
		remove_trait = digesting
	}
	if = {
		limit = { has_trait = genital_digesting }
		remove_trait = genital_digesting
	}

	random_list = {
		50 = {
		add_prowess_skill = 1
		}
		50 = {
		add_diplomacy_skill = 1   
		}  
	}
	add_character_modifier = {
		modifier = satisfied years = 2
	}
	change_current_weight = 30
	remove_character_flag = vore_predator
}	

#Removes Unnecessary Info
clean_up_effect = {
	scope:predator = {
		if = {
			limit = { has_character_flag = portrait_belly }
			remove_character_flag = portrait_belly
			#remove_character_flag = portrait_genitals
		}
		clear_saved_scope = predator
	}
	scope:prey = {
		clear_saved_scope = prey
	}
}

#Removes Unneccessary Info in Events With Exit Options (Defunct)
exit_clean_up_effect = {
	scope:predator = {
		clear_saved_scope = predator
		scope:prey = {
			clear_saved_scope = prey       
		}
	}
}

vore_imprison_character_effect = {

	scope:predator = {
		imprison = {
			target = scope:new_target
			type = house_arrest
		}
	}

	imprison_hostage_tooltip_effect = { WHO = scope:prey }

}

# escape_from_stomach_effect = {
# 	play_music_cue = "mx_cue_sacredrite"
# 	scope:imprisoner = {
# 		if = {
# 			limit = {
# 				exists = capital_province
# 			}
# 			capital_province = {
# 				save_scope_as = background_wilderness_scope
# 			}
# 		}
# 		else = {
# 			location = {
# 				save_scope_as = background_wilderness_scope
# 			}
# 		}
# 		if = {
# 			limit = {
# 				OR = {
# 					has_revoke_title_reason = root
# 					has_banish_reason = root
# 					has_execute_reason = root
# 				}
# 			}
# 			add_opinion = {
# 				target = root
# 				modifier = escaped_from_prison_crime
# 			}
# 		}
# 		else = {
# 			add_opinion = {
# 				target = root
# 				modifier = escaped_from_prison_opinion
# 			}
# 		}
# 	}
# 	create_character_memory = {
# 		type = escaped_from_prison_memory
		
# 		participants = {
# 			imprisoner = scope:imprisoner
# 		}
# 	}
# 	add_character_flag = {
# 		flag = escaped_from_prison_flag
# 		days = 1
# 	}
# 	add_character_flag = { #To make sure you don't get spammed about the release
# 		flag = block_for_prison_release_notification
# 		days = 1
# 	}
# 	release_from_prison = yes
# 	random_dummy_gender_soldier_effect = { SCOPE_NAME = dummy_gender }
# 	hidden_effect = {
# 		remove_decision_cooldown = escape_from_prison_decision
# 	}
# 	if = {
# 		limit = { has_character_modifier = allowed_to_go_outside }
# 		remove_character_modifier = allowed_to_go_outside
# 	}
# 	if = {
# 		limit = { has_character_modifier = moldy_gruel_diet }
# 		remove_character_modifier = moldy_gruel_diet
# 	}
# }