#Initial Variables Set
on_game_start_after_lobby = {
	on_actions = {
		on_add_vore_toggles
	}
}

#In case of game start failure
five_year_playable_pulse = {
	on_actions = {
		on_vore_defensive_check
	}
}

on_vore_defensive_check = {
	trigger = {
		NOT = { has_global_variable = oral_banned }
	}
	effect = {
		set_global_variable = { name = oral_banned value = no }
		set_global_variable = { name = unbirth_banned value = no }
		set_global_variable = { name = anal_banned value = no }
		set_global_variable = { name = cock_banned value = no }
		set_global_variable = { name = scat_banned value = yes }
		set_global_variable = { name = digestion_banned value = no }
		set_global_variable = { name = transformation_banned value = no }
		set_global_variable = { name = gender_allowed value = 0 }
		set_global_variable = { name = pred_frequency value = 100}
		set_global_variable = { name = global_voraciousness value = 50 }
	}
}

on_add_vore_toggles = {
	effect = {
		set_global_variable = { name = oral_banned value = no }
		set_global_variable = { name = unbirth_banned value = no }
		set_global_variable = { name = anal_banned value = no }
		set_global_variable = { name = cock_banned value = no }
		set_global_variable = { name = scat_banned value = yes }
		set_global_variable = { name = digestion_banned value = no }
		set_global_variable = { name = transformation_banned value = no }
		set_global_variable = { name = gender_allowed value = 0 }
		set_global_variable = { name = pred_frequency value = 100}
		set_global_variable = { name = global_voraciousness value = 50 }
		every_player = {
			if = {
				limit = { age >= 18 }
				add_character_flag = vore_capable
				set_variable = { name = num_prey value = 0 }
			}
			save_scope_as = plyr
			if = {
				limit = { 
					OR = {
						scope:plyr.religion = { is_in_family = rf_voraphillic }
					}
				}
				every_courtier = {
					limit = { NOT = { faith = scope:plyr.faith} }
					set_character_faith = scope:plyr.faith
				}
				every_vassal_or_below = {
					limit = { NOT = { faith = scope:plyr.faith} }
					set_character_faith = scope:plyr.faith
				}
				every_courtier_or_guest = {
					limit = {
						NOT = { is_foreign_court_guest = yes }
						NOT = { faith = scope:plyr.faith }
					}
					random_list = {
						25 = {
							add_piety = 1
						}
						75 = {
							set_character_faith = scope:plyr.faith
						}
					}
				}	
			}	
		}
		every_county = {
			limit = { 
				OR = {
					county_controller.religion = { is_in_family = rf_voraphillic }
				}
			}	
			set_county_faith = scope:plyr.faith
		}
		clear_saved_scope = plyr
		every_living_character = {
			limit = { age >= 18}
			add_character_flag = vore_capable
			save_scope_as = char
			set_variable = { name = num_prey value = 0 }
			set_variable = { name = assigned_slot value = 1 }
			set_variable = { name = voraciousness value = { 45 70 } }
			set_variable = { name = lethal_vore_tendency value = { 10 90 } }
			set_variable = { name = non_lethal_vore_tendency value = { 10 90 } } 
			set_variable = { name = oral_vore_tendency value = { 50 90 } }
			set_variable = { name = anal_vore_tendecny value = {10 50 } }
			if = {
				limit = { is_female = yes }
				set_variable = { name = unbirth_vore_tendency value = { 10 40 } }
			} 
			else = {
				set_variable = { name = cock_vore_tendency value = { 10 40 } }
			}
			if = {
				limit = {
					scope:char.religion = { is_in_family = rf_voraphillic}
				}
				every_courtier = {
					limit = { NOT = { faith = scope:char.faith} }
					set_character_faith = scope:char.faith
				}
				random_courtier_or_guest = {
					limit = { NOT = { faith = scope:char.faith} }
					set_character_faith_with_conversion = scope:char.faith
				}
			}
			clear_saved_scope = char
		}
	}
}

on_birthday = {
	on_actions = { 
		on_vore_18th_birthday_gift
	}
}

#Might be buggy, allowing diseased characters to vore
on_vore_18th_birthday_gift = {
	trigger = { age = 18 }
	effect = {
		set_variable = { name = voraciousness value = { 45 70 } }
		set_variable = { name = num_prey value = 0 }
		add_character_flag = vore_capable
	}
}

#Death of predator
on_death_relation_prey = {
	on_actions = {
		on_death_of_pred
	}
}

on_death_of_pred = {
    effect = {
		every_relation = {
    		type = prey
    # Do something with each prey
		}
        save_scope_as = predator
        scope:target = {
            save_scope_as = prey
            if = {
                limit = { is_in_prison_type = vore_dungeon }
                escape_from_prison_effect = yes
            }
        }
        # Call effect while both scopes are still available
        if = {
            limit = { 
                exists = scope:predator 
                exists = scope:prey 
            }
            release_prey_location_check_effect = yes
        }
    }
}

on_death_relation_predator = {
	on_actions = {
		on_death_of_prey
	}
}

on_death_of_prey = {
	effect = {
		save_scope_as = prey
		scope:target = {
			save_scope_as = predator
			release_prey_location_check_effect = yes
		}
	}
}

on_release_from_prison = {
	on_actions = {
		on_release_prey_from_prison
	}
}

on_release_prey_from_prison = {
    trigger = { has_character_flag = vored }
    effect = {
        root = {
            save_scope_as = prey
            
            # Find the predator
			any_relation = {
				type = predator
				save_scope_as = predator
			}
                
                # Now call the effect with proper scopes
                release_prey_location_check_effect = yes
		}
	}
}